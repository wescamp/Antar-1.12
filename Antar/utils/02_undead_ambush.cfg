#textdomain wesnoth-Antar

#define UNDEAD_AMBUSH___EASY_NORMAL_HARD ON_EASY ON_NORMAL ON_HARD
		[store_locations]
			x=5-32
			y=9-33
			terrain=Gs^Fp, Hh^Fp
			[not]
				x,y=5,31
				radius=8
			[/not]
			[not]
				[filter]
				[/filter]
			[/not]
			[not]
				[filter_adjacent_location]
					[not]
						terrain=Gg, Hh^Fp, Gs^Fp, Hh, Rb, Ds, Hhd^Fmw, Gll^Fp
					[/not]
				[/filter_adjacent_location]
			[/not]
			variable=possible_ambush_locations
		[/store_locations]
#		{FOREACH possible_ambush_locations i}
#			[label]
#				text=possible hex
#				x,y=$possible_ambush_locations[$i].x,$possible_ambush_locations[$i].y
#			[/label]
#		 {NEXT i}

		{VARIABLE ambusher 0}

		[while]
			[variable]
				name=ambusher
				less_than={ON_DIFFICULTY {ON_EASY} {ON_NORMAL} {ON_HARD} }
			[/variable]
			[do]
				{RANDOM 1..$possible_ambush_locations.length}
				{VARIABLE_OP random add -1}

				# Check if the random location picked already contains an ambusher
				# and if it does, we loop again to pick another one until an empty
				# one is found.

				[if]
					[have_unit]
						x,y=$possible_ambush_locations[$random].x,$possible_ambush_locations[$random].y
					[/have_unit]
					[else]
						[unit]
							x,y=$possible_ambush_locations[$random].x,$possible_ambush_locations[$random].y
							type=Walking Corpse
							side=3
							role=ambusher
						[/unit]
						[object]
							silent=yes
							[filter]
								x,y=$possible_ambush_locations[$random].x,$possible_ambush_locations[$random].y
							[/filter]
							[effect]
								apply_to=new_ability
								[abilities]
									[hides]
										id=undead_ambush
										affect_self=yes
										[filter_self]
											role=ambusher
											[filter_location]
												terrain=Gs^Fp, Hh^Fp
											[/filter_location]
										[/filter_self]
									[/hides]
								[/abilities]
							[/effect]
						[/object]
						### count till max number of ambushers is reached
						{VARIABLE_OP ambusher add 1}
					[/else]
				[/if]
			[/do]
		[/while]

		{CLEAR_VARIABLE possible_ambush_locations}
		{CLEAR_VARIABLE ambusher}
#enddef

#define UNDEAD_AMBUSH_EVENTS
		[event]
			name=turn refresh
			first_time_only=no
			[if]
				[variable]
					name=side_number
					numerical_equals=3
				[/variable]
				[then]
					{MODIFY_UNIT side,role=3,ambusher moves 0}
				[/then]
			[/if]
		[/event]

		[event]
			name=moveto
			first_time_only=no
			[filter]
				side=1
				[filter_adjacent]
					side=3
					role=ambusher
				[/filter_adjacent]
			[/filter]
			{MODIFY_UNIT (
				side=3
				role=ambusher
				[filter_adjacent]
					x,y=$x1,$y1
				[/filter_adjacent]
			) role not_ambusher}
			[if]
				[variable]
					name=undead_seen
					equals=no
				[/variable]
				[then]
					[message]
						speaker=unit
						message= _ "<b>Undead!</b> There they are!"
					[/message]
					{ASoR_SCROLL_TO $x2 $y2 800}
					{VARIABLE_OP undead_seen value yes}
					
				[/then]
				[else]
					[switch]
						variable=ambush_count
						[case]
							value=0
							[message]
								speaker=unit
								message= _ "<b>Undead!</b> They hide in the woods here!"
							[/message]
							{ASoR_SCROLL_TO $x2 $y2 800}
						[/case]
						[case]
							value=1
							[message]
								speaker=unit
								message= _ "Watch out, the woods and hills are not save here!"
							[/message]
							{ASoR_SCROLL_TO $x2 $y2 800}
						[/case]
						[case]
							value=2
							[message]
								speaker=unit
								message= _ "Another one!"
							[/message]
							{ASoR_SCROLL_TO $x2 $y2 800}
						[/case]
						[case]
							value=3
							[message]
								speaker=unit
								message= _ "Damn, another one!"
							[/message]
							{ASoR_SCROLL_TO $x2 $y2 800}
						[/case]
						[else]
							[message]
								speaker=unit
								message= _ "Another ambusher!"
							[/message]
						[/else]
					[/switch]
					{VARIABLE_OP ambush_count add 1}
				[/else]
			[/if]
		[/event]
#enddef